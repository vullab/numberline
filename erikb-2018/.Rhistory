#                                                    xmin = mean.cutoff - se.cutoff,
#                                                    xmax = mean.cutoff + se.cutoff),
#                height = 0.05) +
geom_point(data = bipower.fits.mod.var, aes(x = cutoff.trans, y = slope.trans, color = "variable model"),
size = 3) +
geom_errorbar(data = bipower.fits.mod.var, aes(x = cutoff.trans,
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans,
color = "variable model"),
width = 0) +
geom_point(data = bipower.fits.mod.summary, aes(x = cutoff.trans, y = slope.trans, color = "variable model"),
size = 3) +
geom_errorbar(data = bipower.fits.mod.summary, aes(x = cutoff.trans,
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans,
color = "variable model"),
width = 0) +
geom_hline(yintercept = 1.0, linetype = "dashed") +
scale_color_manual(name = "Data source",
values = c("subjects" = "red", "model" = "blue", "variable model" = "green"),
labels = c("subjects" = "subjects", "model" = "static model", "variable model" = "variable model")) +
ylim(0, 1.5) +
xlim(0, 30) +
ggtitle("Model bilinear fit is consistent with subjects") +
labs(x = "Fitted bilinear cutoff", y = "Fitted slope above cutoff") +
individ_plot_theme
bipower.fits.subj = bipower.fits.subj %>%
mutate(cutoff.trans = 10^a,
slope.trans = 10^b,
slope.error.trans = 10^s)
bipower.fits.mod.summary = bipower.fits.mod %>%
mutate(cutoff.trans = 10^a,
slope.trans = 10^b,
slope.error.trans = 10^s) #%>%
bipower.fits.mod.var = bipower.fits.mod.var %>%
mutate(cutoff.trans = 10^a,
slope.trans = 10^b,
slope.error.trans = 10^s)
### Bilinear fit comparison scatterplot (subjects and static model)
ggplot() +
geom_point(data = bipower.fits.subj, aes(x = cutoff.trans, y = slope.trans, color = "subjects"),
size = 3) +
geom_errorbar(data = bipower.fits.subj, aes(x = cutoff.trans, color = "subjects",
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans),
width = 0) +
# geom_point(data = bipower.fits.mod.summary, aes(x = mean.cutoff, y = mean.slope, color = "model"),
#            size = 3) +
# geom_errorbar(data = bipower.fits.mod.summary, aes(x = mean.cutoff, color = "model",
#                                                    ymin = mean.slope - se.slope,
#                                                    ymax = mean.slope + se.slope),
#               width = 0.5) +
# geom_errorbarh(data = bipower.fits.mod.summary, aes(y = mean.slope, color = "model",
#                                                    xmin = mean.cutoff - se.cutoff,
#                                                    xmax = mean.cutoff + se.cutoff),
#                height = 0.05) +
geom_point(data = bipower.fits.mod.var, aes(x = cutoff.trans, y = slope.trans, color = "variable model"),
size = 3) +
geom_errorbar(data = bipower.fits.mod.var, aes(x = cutoff.trans,
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans,
color = "variable model"),
width = 0) +
geom_point(data = bipower.fits.mod.summary, aes(x = cutoff.trans, y = slope.trans, color = "variable model"),
size = 3) +
geom_errorbar(data = bipower.fits.mod.summary, aes(x = cutoff.trans,
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans,
color = "variable model"),
width = 0) +
geom_hline(yintercept = 1.0, linetype = "dashed") +
scale_color_manual(name = "Data source",
values = c("subjects" = "red", "model" = "blue", "variable model" = "green"),
labels = c("subjects" = "subjects", "model" = "static model", "variable model" = "variable model")) +
ylim(0, 1.5) +
xlim(0, 30) +
ggtitle("Model bilinear fit is consistent with subjects") +
labs(x = "Fitted bilinear cutoff", y = "Fitted slope above cutoff") +
individ_plot_theme
### Bilinear fit comparison scatterplot (subjects and static model)
ggplot() +
geom_point(data = bipower.fits.subj, aes(x = cutoff.trans, y = slope.trans, color = "subjects"),
size = 3) +
geom_errorbar(data = bipower.fits.subj, aes(x = cutoff.trans, color = "subjects",
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans),
width = 0) +
# geom_point(data = bipower.fits.mod.summary, aes(x = mean.cutoff, y = mean.slope, color = "model"),
#            size = 3) +
# geom_errorbar(data = bipower.fits.mod.summary, aes(x = mean.cutoff, color = "model",
#                                                    ymin = mean.slope - se.slope,
#                                                    ymax = mean.slope + se.slope),
#               width = 0.5) +
# geom_errorbarh(data = bipower.fits.mod.summary, aes(y = mean.slope, color = "model",
#                                                    xmin = mean.cutoff - se.cutoff,
#                                                    xmax = mean.cutoff + se.cutoff),
#                height = 0.05) +
geom_point(data = bipower.fits.mod.var, aes(x = cutoff.trans, y = slope.trans, color = "variable model"),
size = 3) +
geom_errorbar(data = bipower.fits.mod.var, aes(x = cutoff.trans,
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans,
color = "variable model"),
width = 0) +
geom_point(data = bipower.fits.mod.summary, aes(x = cutoff.trans, y = slope.trans, color = "model"),
size = 3) +
geom_errorbar(data = bipower.fits.mod.summary, aes(x = cutoff.trans,
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans,
color = "model"),
width = 0) +
geom_hline(yintercept = 1.0, linetype = "dashed") +
scale_color_manual(name = "Data source",
values = c("subjects" = "red", "model" = "blue", "variable model" = "green"),
labels = c("subjects" = "subjects", "model" = "static model", "variable model" = "variable model")) +
ylim(0, 1.5) +
xlim(0, 30) +
ggtitle("Model bilinear fit is consistent with subjects") +
labs(x = "Fitted bilinear cutoff", y = "Fitted slope above cutoff") +
individ_plot_theme
bipower.fits.subj = bipower.fits.subj %>%
mutate(cutoff.trans = 10^a,
slope.trans = 10^b,
slope.error.trans = 10^s)
bipower.fits.mod = bipower.fits.mod %>%
mutate(cutoff.trans = 10^a,
slope.trans = 10^b,
slope.error.trans = 10^s)
bipower.fits.mod.summary = bipower.fits.mod %>%
summarize(mean.cutoff = mean(cutoff.trans),
mean.slope = mean(slope.trans),
se.cutoff = sd(cutoff.trans) / sqrt(length(cutoff.trans)),
se.slope = sd(slope.trans) / sqrt(length(slope.trans)))
bipower.fits.mod.var = bipower.fits.mod.var %>%
mutate(cutoff.trans = 10^a,
slope.trans = 10^b,
slope.error.trans = 10^s)
### Bilinear fit comparison scatterplot (subjects and static model)
ggplot() +
geom_point(data = bipower.fits.subj, aes(x = cutoff.trans, y = slope.trans, color = "subjects"),
size = 3) +
geom_errorbar(data = bipower.fits.subj, aes(x = cutoff.trans, color = "subjects",
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans),
width = 0) +
geom_point(data = bipower.fits.mod.summary, aes(x = mean.cutoff, y = mean.slope, color = "model"),
size = 3) +
geom_errorbar(data = bipower.fits.mod.summary, aes(x = mean.cutoff, color = "model",
ymin = mean.slope - se.slope,
ymax = mean.slope + se.slope),
width = 0.5) +
geom_errorbarh(data = bipower.fits.mod.summary, aes(y = mean.slope, color = "model",
xmin = mean.cutoff - se.cutoff,
xmax = mean.cutoff + se.cutoff),
height = 0.05) +
geom_hline(yintercept = 1.0, linetype = "dashed") +
scale_color_manual(name = "Data source",
values = c("subjects" = "red", "model" = "blue"),
labels = c("subjects" = "subjects", "model" = "static model")) +
ylim(0, 1.5) +
xlim(0, 30) +
ggtitle("Model bilinear fit is consistent with subjects") +
labs(x = "Fitted bilinear cutoff", y = "Fitted slope above cutoff") +
individ_plot_theme
### Bilinear fit comparison scatterplot, variable model
ggplot() +
geom_point(data = bipower.fits.subj, aes(x = cutoff.trans, y = slope.trans, color = "subjects"),
size = 3) +
geom_errorbar(data = bipower.fits.subj, aes(x = cutoff.trans, color = "subjects",
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans),
width = 0) +
# geom_point(data = bipower.fits.mod.summary, aes(x = mean.cutoff, y = mean.slope, color = "model"),
#            size = 3) +
# geom_errorbar(data = bipower.fits.mod.summary, aes(x = mean.cutoff, color = "model",
#                                                    ymin = mean.slope - se.slope,
#                                                    ymax = mean.slope + se.slope),
#               width = 0.5) +
# geom_errorbarh(data = bipower.fits.mod.summary, aes(y = mean.slope, color = "model",
#                                                    xmin = mean.cutoff - se.cutoff,
#                                                    xmax = mean.cutoff + se.cutoff),
#                height = 0.05) +
geom_point(data = bipower.fits.mod.var, aes(x = cutoff.trans, y = slope.trans, color = "variable model"),
size = 3) +
geom_errorbar(data = bipower.fits.mod.var, aes(x = cutoff.trans,
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans,
color = "variable model"),
width = 0) +
geom_point(data = bipower.fits.mod, aes(x = cutoff.trans, y = slope.trans, color = "model"),
size = 3) +
geom_errorbar(data = bipower.fits.mod, aes(x = cutoff.trans,
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans,
color = "model"),
width = 0) +
geom_hline(yintercept = 1.0, linetype = "dashed") +
scale_color_manual(name = "Data source",
values = c("subjects" = "red", "model" = "blue", "variable model" = "green"),
labels = c("subjects" = "subjects", "model" = "static model", "variable model" = "variable model")) +
ylim(0, 1.5) +
xlim(0, 30) +
ggtitle("Model bilinear fit is consistent with subjects") +
labs(x = "Fitted bilinear cutoff", y = "Fitted slope above cutoff") +
individ_plot_theme
### Bilinear fit comparison scatterplot, variable model
ggplot() +
geom_point(data = bipower.fits.subj, aes(x = cutoff.trans, y = slope.trans, color = "subjects"),
size = 3) +
geom_errorbar(data = bipower.fits.subj, aes(x = cutoff.trans, color = "subjects",
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans),
width = 0) +
geom_point(data = bipower.fits.mod.var, aes(x = cutoff.trans, y = slope.trans, color = "variable model"),
size = 3) +
geom_errorbar(data = bipower.fits.mod.var, aes(x = cutoff.trans,
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans,
color = "variable model"),
width = 0) +
geom_point(data = bipower.fits.mod, aes(x = cutoff.trans, y = slope.trans, color = "model"),
size = 3) +
geom_errorbar(data = bipower.fits.mod, aes(x = cutoff.trans,
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans,
color = "model"),
width = 0) +
geom_hline(yintercept = 1.0, linetype = "dashed") +
scale_color_manual(name = "Data source",
values = c("subjects" = "red", "model" = "blue", "variable model" = "green"),
labels = c("subjects" = "subjects", "model" = "static model", "variable model" = "variable model")) +
ylim(0, 1.5) +
xlim(0, 30) +
ggtitle("Model bilinear fit is consistent with subject variability") +
labs(x = "Fitted bilinear cutoff", y = "Fitted slope above cutoff") +
individ_plot_theme
### Bilinear fit comparison scatterplot, variable model
ggplot() +
geom_point(data = bipower.fits.subj, aes(x = cutoff.trans, y = slope.trans, color = "subjects"),
size = 3) +
geom_errorbar(data = bipower.fits.subj, aes(x = cutoff.trans, color = "subjects",
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans),
width = 0) +
geom_point(data = bipower.fits.mod.var, aes(x = cutoff.trans, y = slope.trans, color = "variable model"),
size = 3) +
geom_errorbar(data = bipower.fits.mod.var, aes(x = cutoff.trans,
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans,
color = "variable model"),
width = 0) +
geom_point(data = bipower.fits.mod, aes(x = cutoff.trans, y = slope.trans, color = "model"),
size = 3) +
geom_errorbar(data = bipower.fits.mod, aes(x = cutoff.trans,
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans,
color = "model"),
width = 0) +
geom_hline(yintercept = 1.0, linetype = "dashed") +
scale_color_manual(name = "Data source",
values = c("subjects" = "red", "model" = "blue", "variable model" = "green"),
labels = c("subjects" = "subjects", "model" = "static model", "variable model" = "variable model")) +
ylim(0, 1.5) +
xlim(0, 30) +
ggtitle("Variable model fit is consistent with subject variability") +
labs(x = "Fitted bilinear cutoff", y = "Fitted slope above cutoff") +
individ_plot_theme
### Bilinear fit comparison scatterplot, variable model
ggplot() +
geom_point(data = bipower.fits.subj, aes(x = cutoff.trans, y = slope.trans, color = "subjects"),
size = 3) +
geom_errorbar(data = bipower.fits.subj, aes(x = cutoff.trans, color = "subjects",
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans),
width = 0) +
geom_point(data = bipower.fits.mod, aes(x = cutoff.trans, y = slope.trans, color = "model"),
size = 3) +
geom_errorbar(data = bipower.fits.mod, aes(x = cutoff.trans,
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans,
color = "model"),
width = 0) +
geom_hline(yintercept = 1.0, linetype = "dashed") +
scale_color_manual(name = "Data source",
values = c("subjects" = "red", "model" = "blue"),
labels = c("subjects" = "subjects", "model" = "low variability model")) +
ylim(0, 1.5) +
xlim(0, 30) +
ggtitle("Low variability model fit") +
labs(x = "Fitted bilinear cutoff", y = "Fitted slope above cutoff") +
individ_plot_theme
ggplot() +
geom_point(data = bipower.fits.subj, aes(x = cutoff.trans, y = slope.trans, color = "subjects"),
size = 3) +
geom_errorbar(data = bipower.fits.subj, aes(x = cutoff.trans, color = "subjects",
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans),
width = 0) +
geom_point(data = bipower.fits.mod.var, aes(x = cutoff.trans, y = slope.trans, color = "model"),
size = 3) +
geom_errorbar(data = bipower.fits.mod.var, aes(x = cutoff.trans,
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans,
color = "model"),
width = 0) +
geom_hline(yintercept = 1.0, linetype = "dashed") +
scale_color_manual(name = "Data source",
values = c("subjects" = "red", "model" = "blue"),
labels = c("subjects" = "subjects", "model" = "high variability model")) +
ylim(0, 1.5) +
xlim(0, 30) +
ggtitle("High variability model fit") +
labs(x = "Fitted bilinear cutoff", y = "Fitted slope above cutoff") +
individ_plot_theme
data.model.high.var = run.model.individ.memories(data.path = DATA,
n.trials = TRIALS,
n.samples = 20,
p.bumper = 0.6,
min.est = MIN_ESTIMATE,
max.est = MAX_ESTIMATE,
perceived.mag.sd = PERCEIVED_DOTS_NOISE_SD,
est.fxn = ESTIMATE_FXN,
trials.exp = TRIALS_EXP,
bumper.exp = BUMPER_EXP,
prior.exp = PRIOR_EXP,
post.exp = POSTERIOR_SAMPLE_EXP,
n.memories = 50)
data.model.low.var = run.model.individ.memories(data.path = DATA,
n.trials = TRIALS,
n.samples = 20,
p.bumper = 0.6,
min.est = MIN_ESTIMATE,
max.est = MAX_ESTIMATE,
perceived.mag.sd = PERCEIVED_DOTS_NOISE_SD,
est.fxn = ESTIMATE_FXN,
trials.exp = TRIALS_EXP,
bumper.exp = BUMPER_EXP,
prior.exp = PRIOR_EXP,
post.exp = POSTERIOR_SAMPLE_EXP,
n.memories = 500)
SUBJ_DATA_VAR = data.model.high.var # can use either here
MODEL_DATA_HIGH_VAR = data.model.high.var %>%
select(subject, trial, num_dots, model.answer) %>%
mutate(answer = model.answer) # align column names to match participant data
MODEL_DATA_LOW_VAR = data.model.low.var %>%
select(subject, trial, num_dots, model.answer) %>%
mutate(answer = model.answer) # align column names to match participant data
PARAMS = c(0.7, 1.5, -0.5, 0.2, -0.7, 0.2)
names(PARAMS) = c("ma", "sa", "mb", "sb", "ms", "ss")
PRIORS = list()
PRIORS[[1]] = function(x){-dnorm(x, 2, 3.5, log = T)}
PRIORS[[2]] = function(x){-dnorm(x, 0, 0.5, log = T)}
PRIORS[[3]] = function(x){-dnorm(x, -1, 0.25, log = T)}
# Fit static subject data
bipower.fits.subj = data.frame(do.call(rbind, by(SUBJ_DATA_VAR, SUBJ_DATA_VAR$subject, brutefit)))
print(paste("Failed bipower fits:", sum(bipower.fits.subj$logL == -9999)))
# Fit model data, high variability
bipower.fits.mod.high = data.frame(do.call(rbind, by(MODEL_DATA_HIGH_VAR, MODEL_DATA_HIGH_VAR$subject, brutefit)))
print(paste("Failed bipower fits:", sum(bipower.fits.mod.high$logL == -9999)))
# Fit model data, low variability
bipower.fits.mod.low = data.frame(do.call(rbind, by(MODEL_DATA_LOW_VAR, MODEL_DATA_LOW_VAR$subject, brutefit)))
print(paste("Failed bipower fits:", sum(bipower.fits.mod.low$logL == -9999)))
predictions = data.frame()
for (s in unique(SUBJ_DATA_VAR$subject)){
stims = seq(1, 300, by = 1)
# subject params, static
biparams.subj = bipower.fits.subj[bipower.fits.subj$subject == s,]
bipred.subj = (map.bipower(stims, biparams.subj$a, biparams.subj$b))
# model params, high var
biparams.mod.high = bipower.fits.mod.high[bipower.fits.mod.high$subject == s,]
bipred.mod.high = (map.bipower(stims, biparams.mod.high$a, biparams.mod.high$b))
# model params, low variability
biparams.mod.low = bipower.fits.mod.var.low[bipower.fits.mod.var.low$subject == s,]
bipred.mod.low = (map.bipower(stims, biparams.mod.low$a, biparams.mod.low$b))
predictions = rbind(predictions,
data.frame(subject = s,
num_dots = stims,
bipred.subj = bipred.subj,
bipred.mod.high = bipred.mod.high,
bipred.mod.low = bipred.mod.low))
}
predictions = data.frame()
for (s in unique(SUBJ_DATA_VAR$subject)){
stims = seq(1, 300, by = 1)
# subject params, static
biparams.subj = bipower.fits.subj[bipower.fits.subj$subject == s,]
bipred.subj = (map.bipower(stims, biparams.subj$a, biparams.subj$b))
# model params, high var
biparams.mod.high = bipower.fits.mod.high[bipower.fits.mod.high$subject == s,]
bipred.mod.high = (map.bipower(stims, biparams.mod.high$a, biparams.mod.high$b))
# model params, low variability
biparams.mod.low = bipower.fits.mod.low[bipower.fits.mod.low$subject == s,]
bipred.mod.low = (map.bipower(stims, biparams.mod.low$a, biparams.mod.low$b))
predictions = rbind(predictions,
data.frame(subject = s,
num_dots = stims,
bipred.subj = bipred.subj,
bipred.mod.high = bipred.mod.high,
bipred.mod.low = bipred.mod.low))
}
### Bilinear fit comparison scatterplot, variable model: place both these plots alongside each other
# Low variability model (replace model data below with actual low var model data)
ggplot() +
geom_point(data = bipower.fits.subj, aes(x = cutoff.trans, y = slope.trans, color = "subjects"),
size = 3) +
geom_errorbar(data = bipower.fits.subj, aes(x = cutoff.trans, color = "subjects",
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans),
width = 0) +
geom_point(data = bipower.fits.mod.low, aes(x = cutoff.trans, y = slope.trans, color = "model"),
size = 3) +
geom_errorbar(data = bipower.fits.mod.low, aes(x = cutoff.trans,
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans,
color = "model"),
width = 0) +
geom_hline(yintercept = 1.0, linetype = "dashed") +
scale_color_manual(name = "Data source",
values = c("subjects" = "red", "model" = "blue"),
labels = c("subjects" = "subjects", "model" = "low variability model")) +
ylim(0, 1.5) +
xlim(0, 30) +
ggtitle("Low variability model fit") +
labs(x = "Fitted bilinear cutoff", y = "Fitted slope above cutoff") +
individ_plot_theme
bipower.fits.mod.high = bipower.fits.mod.high %>%
mutate(cutoff.trans = 10^a,
slope.trans = 10^b,
slope.error.trans = 10^s)
bipower.fits.mod.low = bipower.fits.mod.low %>%
mutate(cutoff.trans = 10^a,
slope.trans = 10^b,
slope.error.trans = 10^s)
### Bilinear fit comparison scatterplot, variable model: place both these plots alongside each other
# Low variability model (replace model data below with actual low var model data)
ggplot() +
geom_point(data = bipower.fits.subj, aes(x = cutoff.trans, y = slope.trans, color = "subjects"),
size = 3) +
geom_errorbar(data = bipower.fits.subj, aes(x = cutoff.trans, color = "subjects",
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans),
width = 0) +
geom_point(data = bipower.fits.mod.low, aes(x = cutoff.trans, y = slope.trans, color = "model"),
size = 3) +
geom_errorbar(data = bipower.fits.mod.low, aes(x = cutoff.trans,
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans,
color = "model"),
width = 0) +
geom_hline(yintercept = 1.0, linetype = "dashed") +
scale_color_manual(name = "Data source",
values = c("subjects" = "red", "model" = "blue"),
labels = c("subjects" = "subjects", "model" = "low variability model")) +
ylim(0, 1.5) +
xlim(0, 30) +
ggtitle("Low variability model fit") +
labs(x = "Fitted bilinear cutoff", y = "Fitted slope above cutoff") +
individ_plot_theme
bipower.fits.mod.high
bipower.fits.subj = bipower.fits.subj %>%
mutate(cutoff.trans = 10^a,
slope.trans = 10^b,
slope.error.trans = 10^s)
### Bilinear fit comparison scatterplot, variable model: place both these plots alongside each other
# Low variability model (replace model data below with actual low var model data)
ggplot() +
geom_point(data = bipower.fits.subj, aes(x = cutoff.trans, y = slope.trans, color = "subjects"),
size = 3) +
geom_errorbar(data = bipower.fits.subj, aes(x = cutoff.trans, color = "subjects",
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans),
width = 0) +
geom_point(data = bipower.fits.mod.low, aes(x = cutoff.trans, y = slope.trans, color = "model"),
size = 3) +
geom_errorbar(data = bipower.fits.mod.low, aes(x = cutoff.trans,
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans,
color = "model"),
width = 0) +
geom_hline(yintercept = 1.0, linetype = "dashed") +
scale_color_manual(name = "Data source",
values = c("subjects" = "red", "model" = "blue"),
labels = c("subjects" = "subjects", "model" = "low variability model")) +
ylim(0, 1.5) +
xlim(0, 30) +
ggtitle("Low variability model fit") +
labs(x = "Fitted bilinear cutoff", y = "Fitted slope above cutoff") +
individ_plot_theme
# High variability model (replace model data below with actual high var model data)
ggplot() +
geom_point(data = bipower.fits.subj, aes(x = cutoff.trans, y = slope.trans, color = "subjects"),
size = 3) +
geom_errorbar(data = bipower.fits.subj, aes(x = cutoff.trans, color = "subjects",
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans),
width = 0) +
geom_point(data = bipower.fits.mod.var, aes(x = cutoff.trans, y = slope.trans, color = "model"),
size = 3) +
geom_errorbar(data = bipower.fits.mod.var, aes(x = cutoff.trans,
ymin = slope.trans - slope.error.trans,
ymax = slope.trans + slope.error.trans,
color = "model"),
width = 0) +
geom_hline(yintercept = 1.0, linetype = "dashed") +
scale_color_manual(name = "Data source",
values = c("subjects" = "red", "model" = "blue"),
labels = c("subjects" = "subjects", "model" = "high variability model")) +
ylim(0, 1.5) +
xlim(0, 30) +
ggtitle("High variability model fit") +
labs(x = "Fitted bilinear cutoff", y = "Fitted slope above cutoff") +
individ_plot_theme
